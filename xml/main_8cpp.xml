<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="main_8hpp" local="yes">main.hpp</includes>
    <includes refid="dog_8hpp" local="yes">dog.hpp</includes>
    <includes refid="utility_8hpp" local="yes">utility.hpp</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="3">
        <label>dog.hpp</label>
        <link refid="dog_8hpp"/>
      </node>
      <node id="1">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>main.hpp</label>
        <link refid="main_8hpp"/>
      </node>
      <node id="4">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="6" column="5" bodyfile="src/main.cpp" bodystart="6" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ade1ea7ec2e87f146e8b006c86e89bc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testNumbers</definition>
        <argsstring>(void)</argsstring>
        <name>testNumbers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="15" column="6" bodyfile="src/main.cpp" bodystart="15" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae0f669050fa21339b103732480fc9667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testDog</definition>
        <argsstring>(void)</argsstring>
        <name>testDog</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="27" column="6" bodyfile="src/main.cpp" bodystart="27" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8hpp" kindref="compound">main.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dog_8hpp" kindref="compound">dog.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utility_8hpp" kindref="compound">utility.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Start\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ade1ea7ec2e87f146e8b006c86e89bc04" kindref="member">testNumbers</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ae0f669050fa21339b103732480fc9667" kindref="member">testDog</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nEnd\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ade1ea7ec2e87f146e8b006c86e89bc04" kindref="member">testNumbers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Testing<sp/>numbers...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>squared<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/><ref refid="utility_8cpp_1ab12b3cad66448e2bfc8c590d002052da" kindref="member">square</ref>(x));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>times<sp/>%d<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/><ref refid="utility_8cpp_1a50de380d6a4786c51a18168d9d9c7fa1" kindref="member">multiply</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>magic<sp/>number<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="utility_8hpp_1a54061e5993a5517320d425f44408cc86" kindref="member">MAGIC_NUMBER</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>magicked<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/><ref refid="utility_8cpp_1a07a97f4470961bb441483bc3e8748861" kindref="member">magic</ref>(x));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Fight:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="utility_8cpp_1ab2d299d418c81fbbdb83fe90f0d11bb2" kindref="member">battleOfTheFiveGods</ref>());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Number<sp/>test<sp/>complete.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae0f669050fa21339b103732480fc9667" kindref="member">testDog</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Testing<sp/>Dog...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_dog" kindref="compound">Dog</ref>*<sp/>fido<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_dog" kindref="compound">Dog</ref>(</highlight><highlight class="stringliteral">&quot;Fido&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a710429cc93dc5140d5616f72804468a9" kindref="member">bark</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a8082ce753fd0911a6744bfa553a65e48" kindref="member">sleep</ref>(1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a710429cc93dc5140d5616f72804468a9" kindref="member">bark</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a8082ce753fd0911a6744bfa553a65e48" kindref="member">sleep</ref>(1000);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a756ea89c1b661023452d87063049145e" kindref="member">run</ref>(6);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a756ea89c1b661023452d87063049145e" kindref="member">run</ref>(3);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a8082ce753fd0911a6744bfa553a65e48" kindref="member">sleep</ref>(1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>fido-&gt;<ref refid="class_dog_1a710429cc93dc5140d5616f72804468a9" kindref="member">bark</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Dog<sp/>test<sp/>complete.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main.cpp"/>
  </compounddef>
</doxygen>
